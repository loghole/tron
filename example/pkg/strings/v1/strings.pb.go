// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: strings.proto

package stringsV1

import (
	context "context"
	v1 "example/pkg/types/v1"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("strings.proto", fileDescriptor_0af3cde72035e609) }

var fileDescriptor_0af3cde72035e609 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x2e, 0x29, 0xca,
	0xcc, 0x4b, 0x2f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x82, 0x71, 0xcb, 0x0c, 0xa5,
	0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2,
	0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0xa0, 0x2a, 0xa5, 0xa4, 0x52, 0x2b, 0x12, 0x73, 0x0b, 0xa0,
	0xd2, 0x65, 0x86, 0xfa, 0x25, 0x95, 0x05, 0xa9, 0x50, 0x39, 0xa3, 0x55, 0x8c, 0x5c, 0xec, 0xc1,
	0x10, 0x83, 0x84, 0x82, 0xb8, 0xd8, 0x43, 0xf2, 0x43, 0x0b, 0x0a, 0x52, 0x8b, 0x84, 0x04, 0xf4,
	0x20, 0x8a, 0xca, 0x0c, 0xf5, 0x20, 0xb2, 0x52, 0x18, 0x22, 0x4a, 0xca, 0x4d, 0x97, 0x9f, 0x4c,
	0x66, 0x92, 0x15, 0x92, 0x86, 0x99, 0x0b, 0x75, 0x90, 0x7e, 0x29, 0xc8, 0x08, 0xfd, 0xea, 0xe2,
	0x92, 0xa2, 0x5a, 0x21, 0x6f, 0x2e, 0x76, 0xf7, 0xd4, 0x12, 0xcf, 0xbc, 0xb4, 0x7c, 0xa2, 0xcc,
	0x94, 0x01, 0x9b, 0x29, 0x26, 0x24, 0x82, 0x6e, 0x66, 0x66, 0x5e, 0x5a, 0xbe, 0x93, 0xf4, 0x89,
	0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe3, 0xb1, 0x1c, 0x43,
	0x14, 0x27, 0x54, 0x3e, 0xcc, 0x30, 0x89, 0x0d, 0xec, 0x21, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x6b, 0x03, 0x45, 0xcb, 0x27, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StringsClient is the client API for Strings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringsClient interface {
	// Method to upper
	ToUpper(ctx context.Context, in *v1.String, opts ...grpc.CallOption) (*v1.String, error)
	GetInfo(ctx context.Context, in *v1.String, opts ...grpc.CallOption) (*v1.String, error)
}

type stringsClient struct {
	cc *grpc.ClientConn
}

func NewStringsClient(cc *grpc.ClientConn) StringsClient {
	return &stringsClient{cc}
}

func (c *stringsClient) ToUpper(ctx context.Context, in *v1.String, opts ...grpc.CallOption) (*v1.String, error) {
	out := new(v1.String)
	err := c.cc.Invoke(ctx, "/strings.v1.Strings/ToUpper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringsClient) GetInfo(ctx context.Context, in *v1.String, opts ...grpc.CallOption) (*v1.String, error) {
	out := new(v1.String)
	err := c.cc.Invoke(ctx, "/strings.v1.Strings/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringsServer is the server API for Strings service.
type StringsServer interface {
	// Method to upper
	ToUpper(context.Context, *v1.String) (*v1.String, error)
	GetInfo(context.Context, *v1.String) (*v1.String, error)
}

// UnimplementedStringsServer can be embedded to have forward compatible implementations.
type UnimplementedStringsServer struct {
}

func (*UnimplementedStringsServer) ToUpper(ctx context.Context, req *v1.String) (*v1.String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToUpper not implemented")
}
func (*UnimplementedStringsServer) GetInfo(ctx context.Context, req *v1.String) (*v1.String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterStringsServer(s *grpc.Server, srv StringsServer) {
	s.RegisterService(&_Strings_serviceDesc, srv)
}

func _Strings_ToUpper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringsServer).ToUpper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strings.v1.Strings/ToUpper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringsServer).ToUpper(ctx, req.(*v1.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strings_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringsServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strings.v1.Strings/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringsServer).GetInfo(ctx, req.(*v1.String))
	}
	return interceptor(ctx, in, info, handler)
}

var _Strings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "strings.v1.Strings",
	HandlerType: (*StringsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ToUpper",
			Handler:    _Strings_ToUpper_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _Strings_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "strings.proto",
}
