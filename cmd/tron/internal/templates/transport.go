package templates

import (
	"github.com/loghole/tron/cmd/tron/internal/models"
)

type TransportData struct {
	*models.Proto
	Version string
	Swagger string
}

const Transport = `// Code generated by tron {{ .Version }}. DO NOT EDIT.
// source: {{ .RelPath }}

package {{ .GoPackage }}

import (
	"context"
	"github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	"github.com/loghole/tron/transport"
	"google.golang.org/grpc"
)

// {{ .Service.Name }}ServiceDesc is description for the {{ .Service.Name }}Server.
type {{ .Service.Name }}ServiceDesc struct {
	svc {{ .Service.Name }}Server
}

func New{{ .Service.Name }}ServiceDesc(i {{ .Service.Name }}Server) transport.ServiceDesc {
	return &{{ .Service.Name }}ServiceDesc{svc: i}
}

func (d *{{ .Service.Name }}ServiceDesc) RegisterGRPC(s *grpc.Server) {
	Register{{ .Service.Name }}Server(s, d.svc)
}

func (d *{{ .Service.Name }}ServiceDesc) RegisterHTTP(mux *runtime.ServeMux) {
	Register{{ .Service.Name }}HandlerServer(context.Background(), mux, d.svc)
}

func (d *{{ .Service.Name }}ServiceDesc) SwaggerDef() []byte {
	return []byte({{ .Swagger }})
}
`
