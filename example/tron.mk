# Code generated by tron. DO NOT EDIT.
# You can extend or override anything in ./Makefile

LOCAL_BIN:=$(CURDIR)/bin

DOCKERFILE   = .deploy/docker/Dockerfile
DOCKER_IMAGE = example
VERSION     ?= $$(git describe --tags --always)

LDFLAGS:=-X 'github.com/loghole/tron/internal/app.ServiceName=' \
		 -X 'github.com/loghole/tron/internal/app.AppName=example' \
		 -X 'github.com/loghole/tron/internal/app.GitHash=$(git rev-parse HEAD)' \
		 -X 'github.com/loghole/tron/internal/app.Version=$(git describe --tags --always)' \
		 -X 'github.com/loghole/tron/internal/app.BuildAt=$(date --utc +%FT%TZ)'

.PHONY: .generate
.generate:
	tron generate --proto=api -v

# generate code from proto and config
.PHONY: generate
generate: .bin-deps .pb-deps .generate

# generate code from proto but without downloading proto deps
.PHONY: fast-generate
fast-generate: .generate

.PHONY: generate-config
generate-config:
	tron generate --config -v

# install proto dependencies
.PHONY: .pb-deps
.pb-deps:
	$(info #Installing proto dependencies...)
	GOBIN=$(LOCAL_BIN) go install github.com/gogo/protobuf/protoc-gen-gofast
	GOBIN=$(LOCAL_BIN) go install github.com/utrack/clay/v2/cmd/protoc-gen-goclay

.PHONY: .bin-deps
.bin-deps:
	$(info #Installing binary dependencies...)

test:
	go test -race -v -cover -coverprofile coverage.out $(GO_TEST_PACKAGES)

lint:
	golangci-lint run -v

docker-image:
	docker build \
	-f $(DOCKERFILE) \
	-t $(DOCKER_IMAGE) \
	-t $(DOCKER_IMAGE):$(VERSION) \
	.

run-local:
	go run -ldflags "$(LDFLAGS)" cmd/example/main.go --local-config-enabled
