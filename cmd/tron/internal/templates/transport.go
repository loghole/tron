package templates

type TransportData struct {
	TronVersion string
	GoPackage   string
	ServiceName string
	Swagger     string
}

const Transport = `// Code generated by tron {{ .TronVersion }}. DO NOT EDIT.

package {{ .GoPackage }}

import (
	context "context"

	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"

	transport "github.com/loghole/tron/transport"
)

// {{ .ServiceName }}ServiceDesc is description for the {{ .ServiceName }}Server.
type {{ .ServiceName }}ServiceDesc struct {
	svc {{ .ServiceName }}Server
}

func New{{ .ServiceName }}ServiceDesc(i {{ .ServiceName }}Server) transport.ServiceDesc {
	return &{{ .ServiceName }}ServiceDesc{svc: i}
}

func (d *{{ .ServiceName }}ServiceDesc) RegisterGRPC(s *grpc.Server) {
	Register{{ .ServiceName }}Server(s, d.svc)
}

func (d *{{ .ServiceName }}ServiceDesc) RegisterHTTP(mux *runtime.ServeMux) {
	Register{{ .ServiceName }}HandlerServer(context.Background(), mux, d.svc)
}

func (d *{{ .ServiceName }}ServiceDesc) SwaggerDef() []byte {
	return []byte({{ .Swagger }})
}
`
